scale_fill_manual(values = c('#56B4E9', '#D55E00','#CC79A7'))+
# Labels for axes and legend
labs(y = 'Sepal Width', x = 'Sepal Length', fill = 'Prob (Species)')+
scale_linetype_manual(values = c(1, 3))+
theme_minimal()+
theme(panel.background = element_rect(fill = 'grey', color = NA),
panel.grid = element_line(colour = 'black'))+
scale_colour_manual(values = c('black', 'white'))
ggplot(data=plot_data,
aes(x=Sepal.Length, y=Sepal.Width))+
# Pies-charts showing predicted probabilities of the different species
geom_pie_glyph(aes(linetype = Classification,  colour = Classification), slices = names(preds)) + # Using the pie-border to highlight if the same was classified correctly
# Colours for sectors of the pie-chart
scale_fill_manual(values = c('#56B4E9', '#D55E00','#CC79A7'))+
# Labels for axes and legend
labs(y = 'Sepal Width', x = 'Sepal Length', fill = 'Prob (Species)')+
scale_linetype_manual(values = c(1, 3))+
theme_minimal()+
theme(panel.background = element_rect(fill = 'grey', color = NA),
panel.grid = element_line(colour = 'darkgrey'))+
scale_colour_manual(values = c('black', 'white'))
ggplot(data=plot_data,
aes(x=Sepal.Length, y=Sepal.Width))+
# Pies-charts showing predicted probabilities of the different species
geom_pie_glyph(aes(linetype = Classification,  colour = Classification), slices = names(preds)) + # Using the pie-border to highlight if the same was classified correctly
# Colours for sectors of the pie-chart
scale_fill_manual(values = c('#56B4E9', '#D55E00','#CC79A7'))+
# Labels for axes and legend
labs(y = 'Sepal Width', x = 'Sepal Length', fill = 'Prob (Species)')+
scale_linetype_manual(values = c(1, 3))+
theme_minimal()+
theme(panel.background = element_rect(fill = 'grey', color = NA),
panel.grid = element_line(colour = 'darkgrey'))+
scale_colour_manual(values = c('black', 'white'))
ggplot(data=plot_data,
aes(x=Sepal.Length, y=Sepal.Width))+
# Pies-charts showing predicted probabilities of the different species
geom_pie_glyph(aes(linetype = Classification,  colour = Classification), slices = names(preds)) + # Using the pie-border to highlight if the same was classified correctly
# Colours for sectors of the pie-chart
scale_fill_manual(values = c('#56B4E9', '#D55E00','#CC79A7'))+
# Labels for axes and legend
labs(y = 'Sepal Width', x = 'Sepal Length', fill = 'Prob (Species)')+
scale_linetype_manual(values = c(1, 3))+
theme_minimal()+
theme(panel.background = element_rect(fill = 'grey', color = NA),
panel.grid = element_line(colour = 'darkgrey'))+
scale_colour_manual(values = c('black', 'white'))
is_grouped(plot_data)
?is.grouped_df()
is.grouped_df(plot_data)
plot_data <- cbind(iris, preds)
head(plot_data)
plot_data <- plot_data %>%
# Do operations on a row basis
rowwise() %>%
# Select the species with the highest predicted probability as the classified species
mutate(Predicted = colnames(.)[5 + which.max(c(setosa, versicolor, virginica))]) %>%
# Compare whether the selected species is same as the original
mutate('Classification' = ifelse(Species == Predicted, 'Correct', 'Incorrect'))
is.grouped_df(plot_data)
plot_data
is.rowwise_df(plot_data)
is_rowwise_df(plot_data)
?rowwise
plot_data %>% mutate(x = 1:nrow(.))
nrow(plot_data)
plot_data %>% mutate(x = 1:150)
plot_data %>% mutate(x = 1)
plot_data %>% mutate(x = 1:)
plot_data %>% mutate(x = 1:2)
plot_data %>% mutate(x = list(1:150))
plot_data %>% mutate(x = list(1:150)) %>% View()
class(plot_data)
class(plot_data %>% ungroup())
inherits(plot_data, 'rowwise_df')
library(PieGlyph)
library(ranger)
library(ggplot2)
library(PieGlyph)
library(dplyr)
plot_data <- cbind(iris, preds)
head(plot_data)
plot_data <- plot_data %>%
# Do operations on a row basis
rowwise() %>%
# Select the species with the highest predicted probability as the classified species
mutate(Predicted = colnames(.)[5 + which.max(c(setosa, versicolor, virginica))]) %>%
# Compare whether the selected species is same as the original
mutate('Classification' = ifelse(Species == Predicted, 'Correct', 'Incorrect'))
ggplot(data=plot_data,
aes(x=Sepal.Length, y=Sepal.Width))+
# Pies-charts showing predicted probabilities of the different species
geom_pie_glyph(aes(linetype = Classification,  colour = Classification), slices = names(preds)) + # Using the pie-border to highlight if the same was classified correctly
# Colours for sectors of the pie-chart
scale_fill_manual(values = c('#56B4E9', '#D55E00','#CC79A7'))+
# Labels for axes and legend
labs(y = 'Sepal Width', x = 'Sepal Length', fill = 'Prob (Species)')+
scale_linetype_manual(values = c(1, 3))+
theme_minimal()+
theme(panel.background = element_rect(fill = 'grey', color = NA),
panel.grid = element_line(colour = 'darkgrey'))+
scale_colour_manual(values = c('black', 'white'))
ggplot(data=plot_data,
aes(x=Sepal.Length, y=Sepal.Width))+
# Pies-charts showing predicted probabilities of the different species
geom_pie_glyph(aes(linetype = Classification,  colour = Classification), lwd = 2, slices = names(preds)) + # Using the pie-border to highlight if the same was classified correctly
# Colours for sectors of the pie-chart
scale_fill_manual(values = c('#56B4E9', '#D55E00','#CC79A7'))+
# Labels for axes and legend
labs(y = 'Sepal Width', x = 'Sepal Length', fill = 'Prob (Species)')+
scale_linetype_manual(values = c(1, 3))+
theme_minimal()+
theme(panel.background = element_rect(fill = 'grey', color = NA),
panel.grid = element_line(colour = 'darkgrey'))+
scale_colour_manual(values = c('black', 'white'))
ggplot(data=plot_data,
aes(x=Sepal.Length, y=Sepal.Width))+
# Pies-charts showing predicted probabilities of the different species
geom_pie_glyph(aes(linetype = Classification,  colour = Classification), linewidth = 2, slices = names(preds)) + # Using the pie-border to highlight if the same was classified correctly
# Colours for sectors of the pie-chart
scale_fill_manual(values = c('#56B4E9', '#D55E00','#CC79A7'))+
# Labels for axes and legend
labs(y = 'Sepal Width', x = 'Sepal Length', fill = 'Prob (Species)')+
scale_linetype_manual(values = c(1, 3))+
theme_minimal()+
theme(panel.background = element_rect(fill = 'grey', color = NA),
panel.grid = element_line(colour = 'darkgrey'))+
scale_colour_manual(values = c('black', 'white'))
ggplot(data=plot_data,
aes(x=Sepal.Length, y=Sepal.Width))+
# Pies-charts showing predicted probabilities of the different species
geom_pie_glyph(aes(linetype = Classification,  colour = Classification), linewidth = 2, slices = names(preds)) + # Using the pie-border to highlight if the same was classified correctly
# Colours for sectors of the pie-chart
scale_fill_manual(values = c('#56B4E9', '#D55E00','#CC79A7'))+
# Labels for axes and legend
labs(y = 'Sepal Width', x = 'Sepal Length', fill = 'Prob (Species)')+
scale_linetype_manual(values = c(1, 3))+
theme_minimal()+
# theme(panel.background = element_rect(fill = 'grey', color = NA),
# panel.grid = element_line(colour = 'darkgrey'))+
scale_colour_manual(values = c('black', 'grey'))
ggplot(data=plot_data,
aes(x=Sepal.Length, y=Sepal.Width))+
# Pies-charts showing predicted probabilities of the different species
geom_pie_glyph(aes(linetype = Classification,  colour = Classification), linewidth = 2, slices = names(preds)) + # Using the pie-border to highlight if the same was classified correctly
# Colours for sectors of the pie-chart
scale_fill_manual(values = c('#56B4E9', '#D55E00','#CC79A7'))+
# Labels for axes and legend
labs(y = 'Sepal Width', x = 'Sepal Length', fill = 'Prob (Species)')+
scale_linetype_manual(values = c(1, 3))+
theme_minimal()+
# theme(panel.background = element_rect(fill = 'grey', color = NA),
# panel.grid = element_line(colour = 'darkgrey'))+
scale_colour_manual(values = c('black', 'grey'))
inherits(plot_data, 'rowwise_df')
ggplot(data=plot_data,
aes(x=Sepal.Length, y=Sepal.Width))+
# Pies-charts showing predicted probabilities of the different species
geom_pie_glyph(aes(linetype = Classification,  colour = Classification), linewidth = 2, slices = names(preds)) + # Using the pie-border to highlight if the same was classified correctly
# Colours for sectors of the pie-chart
scale_fill_manual(values = c('#56B4E9', '#D55E00','#CC79A7'))+
# Labels for axes and legend
labs(y = 'Sepal Width', x = 'Sepal Length', fill = 'Prob (Species)')+
scale_linetype_manual(values = c(1, 3))+
theme_minimal()+
scale_colour_manual(values = c('black', 'grey'))
ggplot(data=plot_data,
aes(x=Sepal.Length, y=Sepal.Width))+
# Pies-charts showing predicted probabilities of the different species
geom_pie_glyph(aes(linetype = Classification,  colour = Classification), linewidth = 1, slices = names(preds)) + # Using the pie-border to highlight if the same was classified correctly
# Colours for sectors of the pie-chart
scale_fill_manual(values = c('#56B4E9', '#D55E00','#CC79A7'))+
# Labels for axes and legend
labs(y = 'Sepal Width', x = 'Sepal Length', fill = 'Prob (Species)')+
scale_linetype_manual(values = c(1, 3))+
theme_minimal()+
scale_colour_manual(values = c('black', 'grey'))
ggplot(data=plot_data,
aes(x=Sepal.Length, y=Sepal.Width))+
# Pies-charts showing predicted probabilities of the different species
geom_pie_glyph(aes(linetype = Classification,  colour = Classification), linewidth = 1, slices = names(preds)) + # Using the pie-border to highlight if the same was classified correctly
# Colours for sectors of the pie-chart
scale_fill_manual(values = c('#56B4E9', '#D55E00','#CC79A7'))+
# Labels for axes and legend
labs(y = 'Sepal Width', x = 'Sepal Length', fill = 'Prob (Species)')+
scale_linetype_manual(values = c(1, 3))+
theme_minimal()+
scale_colour_manual(values = c('black', 'darkgrey'))
ggplot(data=plot_data,
aes(x=Sepal.Length, y=Sepal.Width))+
# Pies-charts showing predicted probabilities of the different species
geom_pie_glyph(aes(linetype = Classification,  colour = Classification), linewidth = 2, slices = names(preds)) + # Using the pie-border to highlight if the same was classified correctly
# Colours for sectors of the pie-chart
scale_fill_manual(values = c('#56B4E9', '#D55E00','#CC79A7'))+
# Labels for axes and legend
labs(y = 'Sepal Width', x = 'Sepal Length', fill = 'Prob (Species)')+
scale_linetype_manual(values = c(1, 3))+
theme_minimal()+
theme(panel.background = element_rect(fill = 'grey', color = NA),
panel.grid = element_line(colour = 'darkgrey'))+
scale_colour_manual(values = c('black', 'white'))
ggplot(data=plot_data,
aes(x=Sepal.Length, y=Sepal.Width))+
# Pies-charts showing predicted probabilities of the different species
geom_pie_glyph(aes(linetype = Classification,  colour = Classification), linewidth = 2, slices = names(preds)) + # Using the pie-border to highlight if the same was classified correctly
# Colours for sectors of the pie-chart
scale_fill_manual(values = c('#56B4E9', '#D55E00','#CC79A7'))+
# Labels for axes and legend
labs(y = 'Sepal Width', x = 'Sepal Length', fill = 'Prob (Species)')+
scale_linetype_manual(values = c(1, 3))+
theme_minimal()+
theme(panel.background = element_rect(fill = 'grey', color = NA),
panel.grid = element_line(colour = 'darkgrey'),
plot.background = element_rect(colour = 'grey'))+
scale_colour_manual(values = c('black', 'white'))
ggplot(data=plot_data,
aes(x=Sepal.Length, y=Sepal.Width))+
# Pies-charts showing predicted probabilities of the different species
geom_pie_glyph(aes(linetype = Classification,  colour = Classification), linewidth = 2, slices = names(preds)) + # Using the pie-border to highlight if the same was classified correctly
# Colours for sectors of the pie-chart
scale_fill_manual(values = c('#56B4E9', '#D55E00','#CC79A7'))+
# Labels for axes and legend
labs(y = 'Sepal Width', x = 'Sepal Length', fill = 'Prob (Species)')+
scale_linetype_manual(values = c(1, 3))+
theme_minimal()+
theme(panel.background = element_rect(fill = 'grey', color = NA),
panel.grid = element_line(colour = 'darkgrey'),
plot.background = element_rect(fill = 'grey'))+
scale_colour_manual(values = c('black', 'white'))
ggplot(data=plot_data,
aes(x=Sepal.Length, y=Sepal.Width))+
# Pies-charts showing predicted probabilities of the different species
geom_pie_glyph(aes(linetype = Classification,  colour = Classification), linewidth = 2, slices = names(preds)) + # Using the pie-border to highlight if the same was classified correctly
# Colours for sectors of the pie-chart
scale_fill_manual(values = c('#56B4E9', '#D55E00','#CC79A7'))+
# Labels for axes and legend
labs(y = 'Sepal Width', x = 'Sepal Length', fill = 'Prob (Species)')+
scale_linetype_manual(values = c(1, 3))+
theme_minimal()+
theme(panel.grid = element_line(colour = 'darkgrey'),
plot.background = element_rect(fill = 'grey'))+
scale_colour_manual(values = c('black', 'white'))
ggplot(data=plot_data,
aes(x=Sepal.Length, y=Sepal.Width))+
# Pies-charts showing predicted probabilities of the different species
geom_pie_glyph(aes(linetype = Classification,  colour = Classification), slices = names(preds)) + # Using the pie-border to highlight if the same was classified correctly
# Colours for sectors of the pie-chart
scale_fill_manual(values = c('#56B4E9', '#D55E00','#CC79A7'))+
# Labels for axes and legend
labs(y = 'Sepal Width', x = 'Sepal Length', fill = 'Prob (Species)')+
# Adjusting the borders colours and linetypes
scale_linetype_manual(values = c(1, 3))+
scale_colour_manual(values = c('black', 'white'))
ggplot(data=plot_data,
aes(x=Sepal.Length, y=Sepal.Width))+
# Pies-charts showing predicted probabilities of the different species
geom_pie_glyph(aes(linetype = Classification,  colour = Classification), slices = names(preds)) + # Using the pie-border to highlight if the same was classified correctly
# Colours for sectors of the pie-chart
scale_fill_manual(values = c('#56B4E9', '#D55E00','#CC79A7'))+
# Labels for axes and legend
labs(y = 'Sepal Width', x = 'Sepal Length', fill = 'Prob (Species)')+
# Adjusting the borders colours and linetypes
scale_linetype_manual(values = c(1, 3))+
scale_colour_manual(values = c('black', 'white'))+
theme_minimal()+
theme(panel.grid = element_line(colour = 'darkgrey'),
plot.background = element_rect(fill = 'grey'))
ggplot(data=plot_data,
aes(x=Sepal.Length, y=Sepal.Width))+
# Pies-charts showing predicted probabilities of the different species
geom_pie_glyph(aes(linetype = Classification,  colour = Classification), slices = names(preds)) + # Using the pie-border to highlight if the same was classified correctly
# Colours for sectors of the pie-chart
scale_fill_manual(values = c('#56B4E9', '#D55E00','#CC79A7'))+
# Labels for axes and legend
labs(y = 'Sepal Width', x = 'Sepal Length', fill = 'Prob (Species)')+
# Adjusting the borders colours and linetypes
scale_linetype_manual(values = c(1, 3))+
scale_colour_manual(values = c('black', 'white'))+
theme_minimal()
ggplot(data=plot_data,
aes(x=Sepal.Length, y=Sepal.Width))+
# Pies-charts showing predicted probabilities of the different species
geom_pie_glyph(aes(linetype = Classification,  colour = Classification), slices = names(preds)) + # Using the pie-border to highlight if the same was classified correctly
# Colours for sectors of the pie-chart
scale_fill_manual(values = c('#56B4E9', '#D55E00','#CC79A7'))+
# Labels for axes and legend
labs(y = 'Sepal Width', x = 'Sepal Length', fill = 'Prob (Species)')+
# Adjusting the borders colours and linetypes
scale_linetype_manual(values = c(1, 3))+
scale_colour_manual(values = c('black', 'white'))+
#theme_minimal()+
theme(panel.grid = element_line(colour = 'darkgrey'),
plot.background = element_rect(fill = 'grey'))
ggplot(data=plot_data,
aes(x=Sepal.Length, y=Sepal.Width))+
# Pies-charts showing predicted probabilities of the different species
geom_pie_glyph(aes(linetype = Classification,  colour = Classification), slices = names(preds)) + # Using the pie-border to highlight if the same was classified correctly
# Colours for sectors of the pie-chart
scale_fill_manual(values = c('#56B4E9', '#D55E00','#CC79A7'))+
# Labels for axes and legend
labs(y = 'Sepal Width', x = 'Sepal Length', fill = 'Prob (Species)')+
# Adjusting the borders colours and linetypes
scale_linetype_manual(values = c(1, 3))+
scale_colour_manual(values = c('black', 'white'))+
theme_minimal()+
theme(panel.grid = element_line(colour = 'darkgrey'),
plot.background = element_rect(fill = 'grey'))
draw_key_point
plot_data
library(scatterpie)
library(PieGlyph)
library(tidyverse)
Seatbelts <- data.frame(Seatbelts, time = time(Seatbelts))
Seatbelts
?Seatbelts
1984-1969
Seatbelts <- data.frame(Seatbelts, time = time(Seatbelts))
Seatbelts
plot_data <- Seatbelts[133:192, ]
head(plot_data)
p <- ggplot(plot_data, aes(x = time, y = DriversKilled))+
geom_line(linewidth = 1)+
geom_scatterpie(aes(x = time, y = DriversKilled),
colour = 'black',
data = plot_data[132:192, ],
cols = c('drivers','front', 'rear'))+
theme_minimal()
p
plot_data <- Seatbelts[133:192, ]
plot_data
p <- ggplot(plot_data, aes(x = time, y = DriversKilled))+
geom_line(linewidth = 1)+
geom_scatterpie(aes(x = time, y = DriversKilled),
colour = 'black',
data = plot_data[132:192, ],
cols = c('drivers','front', 'rear'))+
theme_minimal()
p
p <- ggplot(plot_data, aes(x = time, y = kms))+
geom_line(linewidth = 1)+
geom_scatterpie(aes(x = time, y = kms),
colour = 'black',
data = plot_data[132:192, ],
cols = c('drivers','front', 'rear'))+
theme_minimal()
p
p <- ggplot(plot_data, aes(x = time, y = kms))+
geom_line(linewidth = 1)+
geom_scatterpie(aes(x = time, y = kms),
colour = 'black',
data = plot_data,
cols = c('drivers','front', 'rear'))+
theme_minimal()
p
p + coord_equal()
pl <- ggplot(plot_data, aes(x = time, y = kms))+
geom_line(linewidth = 1)+
geom_pie_glyph(aes(linetype = as.factor(law)),
colour = 'black',
slices = c('drivers', 'front', 'rear'))+
labs(x = 'Year', y = 'Km driver',
fill = 'People Killed', linetype = 'Law in Effect?')+
scale_linetype_manual(values = c(1, 3))+
theme_minimal()
pl
pl <- ggplot(plot_data, aes(x = time, y = kms))+
geom_line(linewidth = 1)+
geom_pie_glyph(colour = 'black',
slices = c('drivers', 'front', 'rear'))+
labs(x = 'Year', y = 'Km driver',
fill = 'People Killed', linetype = 'Law in Effect?')+
theme_minimal()
pl
pl <- ggplot(plot_data, aes(x = time, y = kms))+
geom_line(linewidth = 1)+
geom_pie_glyph(aes(linetype = as.factor(law)),
colour = 'black',
slices = c('drivers', 'front', 'rear'))+
labs(x = 'Year', y = 'Km driver',
fill = 'People Killed', linetype = 'Law in Effect?')+
scale_linetype_manual(values = c(1, 3))+
theme_minimal()
pl
pl <- ggplot(plot_data, aes(x = time, y = kms))+
geom_line(linewidth = 1)+
geom_pie_glyph(aes(linetype = as.factor(law)),
colour = 'black',
slices = c('drivers', 'front', 'rear'))+
labs(x = 'Year', y = 'Km driver',
fill = 'People Killed', linetype = 'Law in Effect?')+
scale_linetype_manual(values = c(1, 3),
labels = c('Yes', 'No'))+
theme_minimal()
pl
pl <- ggplot(plot_data, aes(x = time, y = kms))+
geom_line(linewidth = 1)+
geom_pie_glyph(aes(linetype = as.factor(law)),
colour = 'black',
slices = c('drivers', 'front', 'rear'))+
labs(x = 'Year', y = 'Km driven',
fill = 'People Killed', linetype = 'Law in Effect?')+
scale_linetype_manual(values = c(1, 3),
labels = c('Yes', 'No'))+
theme_minimal()
pl
pl +
# Colours of the pie-sectors
scale_fill_manual(values = c('#56B4E9','#F0E442','#CC79A7'))+
# Axis and legend titles
labs(x = 'Year', y = 'Km driven',
fill = 'People Killed', linetype = 'Law in Effect?')
library(PieGlyph)
pkgdown::build_site()
library(PieGlyph)
?PieGlyph
?`PieGlyph-package`
citation("PieGlyph")
library(tidyverse)
library(PieGlyph)
set.seed(123)
plot_data <- data.frame(response = rnorm(30, 100, 30),
system = 1:30,
group = sample(size = 30, x = c('G1', 'G2', 'G3'), replace = T),
A = round(runif(30, 3, 9), 2),
B = round(runif(30, 1, 5), 2),
C = round(runif(30, 3, 7), 2),
D = round(runif(30, 1, 9), 2))
head(plot_data)
ggplot(data = plot_data, aes(x = system, y = response))+
geom_pie_glyph(slices = c('A', 'B', 'C', 'D'))+
theme_minimal()
ggplot(data = plot_data, aes(x = system, y = response))+
geom_pie_glyph(slices = c('A', 'B', 'C', 'D'))
ggplot(data = plot_data, aes(x = system, y = response))+
geom_pie_glyph(slices = c('A', 'B', 'C', 'D'))+
theme_minimal()
ggplot(data = plot_data, aes(x = system, y = response))+
ggplot(data = plot_data, aes(x = system, y = response))+
geom_pie_glyph(slices = c('A', 'B', 'C', 'D'))+
theme_classic()
?theme_classic()
plot_data
max(plot_data$response)
set.seed(1234)
plot_data <- data.frame(response = rnorm(30, 100, 30),
system = 1:30,
group = sample(size = 30, x = c('G1', 'G2', 'G3'), replace = T),
A = round(runif(30, 3, 9), 2),
B = round(runif(30, 1, 5), 2),
C = round(runif(30, 3, 7), 2),
D = round(runif(30, 1, 9), 2))
max(plot_data$response)
head(plot_data)
ggplot(data = plot_data, aes(x = system, y = response))+
geom_pie_glyph(slices = c('A', 'B', 'C', 'D'))+
theme_classic()
plot_data <- data.frame(response = rnorm(10, 100, 30),
system = 1:10,
group = sample(size = 10,
x = c('G1', 'G2', 'G3'),
replace = TRUE),
A = round(runif(10, 3, 9), 2),
B = round(runif(10, 1, 5), 2),
C = round(runif(10, 3, 7), 2),
D = round(runif(10, 1, 9), 2))
head(plot_data)
max(plot_data$response)
set.seed(123)
plot_data <- data.frame(response = rnorm(10, 100, 30),
system = 1:10,
group = sample(size = 10,
x = c('G1', 'G2', 'G3'),
replace = TRUE),
A = round(runif(10, 3, 9), 2),
B = round(runif(10, 1, 5), 2),
C = round(runif(10, 3, 7), 2),
D = round(runif(10, 1, 9), 2))
head(plot_data)
set.seed(123)
max(plot_data$response)
data.frame(response = rnorm(30, 100, 30),
system = 1:30,
group = sample(size = 30, x = c('G1', 'G2', 'G3'), replace = T),
A = round(runif(30, 3, 9), 2),
B = round(runif(30, 1, 5), 2),
C = round(runif(30, 3, 7), 2),
D = round(runif(30, 1, 9), 2))
installed.packages()
'scatterpie' %in% installed.packages()
!('scatterpie' %in% installed.packages())
?group_by()
library(PieGlyph)
library(PieGlyph)
library(PieGlyph)
gpar
gpar()
grid::gpar()
?table
?unique
?is.array
?is.na
?mclust
library(PieGlyph)
library(tidyverse)
library(DImodels)
library(metR)
library(ggnewscale)
raw_data <- sim4 %>% filter(treatment == 150)
data(sim4)
raw_data <- sim4 %>% filter(treatment == 150)
head(raw_data)
library(PieGlyph)
